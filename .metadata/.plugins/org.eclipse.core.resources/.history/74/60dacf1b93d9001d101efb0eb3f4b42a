#include "menu.hpp"

GeneralGame:: GeneralGame(){
    font = new sf:: Font();
    music = new sf:: Music();
    Numberfont = new sf:: Font();
    set_valores();
}

GeneralGame:: ~GeneralGame(){
    delete music;
    delete font;
    delete Numberfont;

}

void GeneralGame:: set_valores(){

    ChaveLobby = true;
    ChaveGame = false;
    ChaveLevels = false;
    ChaveConfigs = false;
    ChaveFinalGame = false;
    VolumeLigado = false;

    SpriteFire.setColor(sf::Color::Transparent);

    Window.create(sf:: VideoMode(1280, 720), "Piratas do CPP", sf:: Style:: Titlebar | sf:: Style:: Close);
    Window.setPosition(sf:: Vector2i(0, 0));
    NumericKeyBoard = 0;
    vel = 5;

    sf::Image Icon = sf::Image { };
    // Setvalues for game


    // Setvalues for icon
    Icon.loadFromFile("../Midia/Ico.png");
    Window.setIcon(Icon.getSize().x, Icon.getSize().y, Icon.getPixelsPtr());

    // Setvalues for Keyboard
    KeyDown = false;
    KeyUP = false;
    KeyLeft = false;
    KeyRight = false;
    SelecionadoEnter = false;
    Mouse_Left = false;

    // Setvalues for Menu
    font -> loadFromFile("../Midia/BattlesbridgeDemo-AL126.ttf");
    Numberfont -> loadFromFile("../Midia/Numbers.ttf");

    image.loadFromFile("../Midia/part1.png");
    bg.setTexture(image);
    pos_mouse = { 0, 0};
    mouse_coord = { 0, 0};


    // Setvalues for Configs
    VolumeImage.loadFromFile("../Midia/Ciricle.png");
    VolumeBg.setScale(0.5, 0.5);
    VolumeBg.setPosition(0, 300);
    VolumeBg.setColor(sf:: Color:: Magenta);
    music -> openFromFile("../Midia/Pirates of the Caribbean The Curse of the Black Pear.ogg");
    music -> setVolume(10);


    // Setvalues for Texts
    text1.setFillColor(sf:: Color:: Magenta);
    text2.setFillColor(sf:: Color:: Cyan);
    text3.setFillColor(sf:: Color:: Magenta);
    text4.setFillColor(sf:: Color:: Cyan);
    text5.setFillColor(sf:: Color:: Magenta);
    text6.setFillColor(sf:: Color:: Cyan);

  //Set values Game

    Agua.loadFromFile("../Midia/EfeitosSonoros/splash1.wav");
    Tiro.loadFromFile("../Midia/EfeitosSonoros/tiro.wav");
    Fogo.loadFromFile("../Midia/EfeitosSonoros/Fire.ogg");
    agua.setBuffer(Agua);
    agua.setVolume(100);
    fogo.setBuffer(Fogo);
    fogo.setVolume(100);



}


void GeneralGame:: Set_Lobby(){
	text5.setString("");
	text8.setString("");
	text6.setString("");
	text9.setString("");
    image.loadFromFile("../Midia/part1.png");
    text1.setFont(*font);
    text1.setString("Play");
    text1.setPosition(560, 498);
    text1.setCharacterSize(25);

    text2.setString("Play");
    text2.setPosition(556, 498);
    text2.setCharacterSize(25);
    text2.setFont(*font);


    text3.setFont(*font);
    text3.setString("Setting");
    text3.setPosition(550, 585);
    text3.setCharacterSize(25);


    text4.setFont(*font);
    text4.setString("Setting");
    text4.setPosition(553, 585);
    text4.setCharacterSize(25);

    textTitulo.setFont(*font);
    textTitulo.setString("Piratas do Cpp");
    textTitulo.setPosition(327, 386);
    textTitulo.setFillColor(sf:: Color:: Magenta);
    textTitulo.setCharacterSize(50);

    SubtextTitulo.setFont(*font);
    SubtextTitulo.setString("Piratas do Cpp");
    SubtextTitulo.setPosition(331, 386);
    SubtextTitulo.setFillColor(sf:: Color:: Cyan);
    SubtextTitulo.setCharacterSize(50);


    SelctMouse.setSize(sf:: Vector2f(206, 52));
    SelctMouse.setPosition(490, 585);

    SelctMouse2.setSize(sf:: Vector2f(206, 52));
    SelctMouse2.setPosition(486, 498);
}


void GeneralGame:: loop_events(){

    sf::Event event;

    pos_mouse = sf:: Mouse:: getPosition(Window);
    mouse_coord = Window.mapPixelToCoords(pos_mouse);

    while (Window.pollEvent(event)) {
        if (event.type == sf:: Event::Closed) {
            Window.close();
        }
        if (sf:: Keyboard:: isKeyPressed(sf:: Keyboard:: Down) && KeyDown == false) {
            KeyDown = true;
        }
        if (sf:: Keyboard:: isKeyPressed(sf:: Keyboard:: Up) && KeyUP == false) {
            KeyUP = true;
        }
        if (sf:: Keyboard:: isKeyPressed(sf:: Keyboard:: Left) && KeyLeft == false) {
            KeyLeft = true;
        }
        if (sf:: Keyboard:: isKeyPressed(sf:: Keyboard:: Right) && KeyRight == false) {
            KeyRight = true;
        }
        if (sf:: Keyboard:: isKeyPressed(sf:: Keyboard:: Return) && SelecionadoEnter == false) {
            SelecionadoEnter = true;
        }
        if (event.type == sf::Event::MouseButtonPressed && Mouse_Left == false) {
            Mouse_Left = true;
        }



    }
}


void GeneralGame:: Lobby(){
	srand(time(NULL));
	p = rand() % 10;
    Set_Lobby();

    if (KeyDown == true) {

        if (NumericKeyBoard < 2) {
            ++NumericKeyBoard;

            if (NumericKeyBoard == 1) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
                KeyDown = true;
            }
            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
                KeyDown = true;
            }
            KeyDown = false;
            SelecionadoEnter = false;
        }
    }


    if (KeyUP == true) {
        if (NumericKeyBoard > 1) {
            --NumericKeyBoard;
            if (NumericKeyBoard == 1) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
                KeyUP = true;
            }
            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
                KeyUP = true;
            }
            KeyUP = false;
            SelecionadoEnter = false;
        }
    }


    if (SelecionadoEnter == true) {

        if (NumericKeyBoard == 1) {
        	NumericKeyBoard = 0;
            ChaveLobby = false;
            ChaveGame = true;
            if(TesteBombs == false){
            	Bomb = 50;
            }
            MOdoGame = 2;
        }
        else if (NumericKeyBoard == 2) {
        	NumericKeyBoard = 0;
            VolumeLigado = true;
            ChaveLobby = false;
            ChaveConfigs = true;

        }
        SelecionadoEnter = false;
    }


    if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {
        text2.setFillColor(sf:: Color:: Magenta);
        text4.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 1;

    }

    else if (!SelctMouse2.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text2.setFillColor(sf:: Color:: Cyan);

    }


    if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {
        text2.setFillColor(sf:: Color:: Cyan);
        text4.setFillColor(sf:: Color:: Magenta);
        NumericKeyBoard = 2;

    }
    else if (!SelctMouse.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text4.setFillColor(sf:: Color:: Cyan);

    }

    if (Mouse_Left == true) {
    	NumericKeyBoard = 0;
        if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {
               ChaveLobby = false;
               ChaveGame = true;
               MOdoGame = 2;
               if(TesteBombs == false){
                         	Bomb = 50;
                         }
         }

        if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {
            VolumeLigado = true;
            ChaveLobby = false;
            ChaveConfigs = true;
        }

        Mouse_Left = false;
    }


}

void GeneralGame:: Configs(){

    if (VolumeLigado == true) {
        VolumeBg.setColor(sf:: Color:: Magenta);
    }

    image.loadFromFile("../Midia/part2.png");

    VolumeBg.setTexture(VolumeImage);


    SelctMouse.setSize(sf:: Vector2f(206, 52));
    SelctMouse.setPosition(98, 636);

    SelctMouse2.setSize(sf:: Vector2f(206, 52));
    SelctMouse2.setPosition(1030, 636);

    SelectConfig.setSize(sf:: Vector2f(206, 52));
    SelectConfig.setPosition(551, 636);

    Coordenadas_ButtonVolume.setPosition(130, 360);
    Coordenadas_ButtonVolume.setSize(sf:: Vector2f(1280, 100));

    textTitulo.setFont(* font);
    textTitulo.setString("Levels");
    textTitulo.setPosition(547, 636);
    textTitulo.setCharacterSize(25);

    SubtextTitulo.setFont(* font);
    SubtextTitulo.setString("Levels");
    SubtextTitulo.setPosition(551, 636);
    SubtextTitulo.setCharacterSize(25);


    text1.setString("Play");
    text1.setPosition(1030, 636);

    text1.setCharacterSize(25);

    text2.setString("Play");
    text2.setPosition(1026, 636);

    text2.setCharacterSize(25);
    text2.setFont(* font);



    text3.setString("Home");
    text3.setPosition(95, 636);

    text3.setCharacterSize(25);
    text3.setFont(* font);


    text4.setString("Home");
    text4.setPosition(98, 636);

    if (KeyUP == true) {
        VolumeBg.setPosition(VolumeBg.getPosition().x + vel, 300);
        volumePosition= VolumeBg.getPosition().x;

        music -> setVolume(volumePosition + 10);
        agua.setVolume(volumePosition + 10);
        fogo.setVolume(volumePosition + 10);
        if (VolumeBg.getPosition().x >= 1080) {
            VolumeBg.setPosition(1080, 300);
        }
        KeyUP = false;
    }

    if (KeyDown == true) {
        VolumeBg.setPosition(VolumeBg.getPosition().x - vel, 300);
        volumePosition = VolumeBg.getPosition().x;

        music -> setVolume(volumePosition + 10);
        agua.setVolume(volumePosition + 10);
        fogo.setVolume(volumePosition + 10);
        if (VolumeBg.getPosition().x <= -100) {
            VolumeBg.setPosition(-100, 300);
        }
        KeyDown = false;
    }


    if (KeyRight == true) {

        if (NumericKeyBoard < 3) {
            ++NumericKeyBoard;

            if (NumericKeyBoard == 1) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
            }
            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Magenta);
            }
            if (NumericKeyBoard == 3) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
            }
            KeyRight = false;
            SelecionadoEnter = false;
        }
    }


    if (KeyLeft == true) {

        if (NumericKeyBoard > 1) {
            --NumericKeyBoard;
            if (NumericKeyBoard == 1) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
            }
            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Magenta);
            }
            if (NumericKeyBoard == 3) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
            }
            KeyLeft = false;
            SelecionadoEnter = false;
        }
    }

    if (SelecionadoEnter == true) {
        if (NumericKeyBoard == 1) {
        	NumericKeyBoard = 0;
            VolumeLigado = false;
            if (VolumeLigado == false) {
                VolumeBg.setColor(sf:: Color:: Transparent);
            }
            ChaveLobby = true;
            ChaveConfigs = false;
        }
        if (NumericKeyBoard == 2) {

        	NumericKeyBoard = 0;
            VolumeLigado = false;
            ChaveConfigs = false;
            ChaveLevels = true;

        } if (NumericKeyBoard == 3) {
        	 VolumeLigado = false;
        	  if (VolumeLigado == false) {
        	      VolumeBg.setColor(sf:: Color:: Transparent);
        	  }
        	  NumericKeyBoard = 0;

            ChaveConfigs = false;
            ChaveGame = true;
            if(TesteBombs == false){
                      	Bomb = 50;
                      }
        }
        SelecionadoEnter = false;
    }


    if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {
        text2.setFillColor(sf:: Color:: Cyan);
        text4.setFillColor(sf:: Color:: Magenta);
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 1;
    }
    else if (!SelctMouse.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text4.setFillColor(sf:: Color:: Cyan);
    }


    if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {
        text4.setFillColor(sf:: Color:: Cyan);
        text2.setFillColor(sf:: Color:: Magenta);
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 3;
    }
    else if (!SelctMouse2.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text2.setFillColor(sf:: Color:: Cyan);
    }


    if (SelectConfig.getGlobalBounds().contains(mouse_coord)) {
        text4.setFillColor(sf:: Color:: Cyan);
        text2.setFillColor(sf:: Color:: Cyan);
        SubtextTitulo.setFillColor(sf:: Color:: Magenta);
        NumericKeyBoard = 2;
    }
    else if (!SelectConfig.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);

    }

    if (Mouse_Left == true) {
    	NumericKeyBoard = 0;
        if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {
            VolumeLigado = false;
            if (VolumeLigado == false) {
                VolumeBg.setColor(sf:: Color:: Transparent);
            }
            ChaveLobby = true;
            ChaveConfigs = false;

        }
        if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {
                   VolumeLigado = false;
                   ChaveConfigs = false;
                   ChaveGame = true;
                   if(TesteBombs == false){
                             	Bomb = 50;
                             }
        }

        if (SelectConfig.getGlobalBounds().contains(mouse_coord)) {
                   VolumeLigado = false;
                   ChaveConfigs = false;
                   ChaveLevels = true;
          }
        Mouse_Left = false;
    }

}


void GeneralGame:: Levels(){

    if (VolumeLigado == false) {
        VolumeBg.setColor(sf:: Color:: Transparent);
    }

    image.loadFromFile("../Midia/part5.png");
    SelctMouse.setSize(sf:: Vector2f(206, 52));
    SelctMouse.setPosition(575, 176);

    SelctMouse2.setSize(sf:: Vector2f(206, 52));
    SelctMouse2.setPosition(557, 346);

    SelectConfig.setSize(sf:: Vector2f(206, 52));
    SelectConfig.setPosition(571, 546);

    SelectPlayLevels.setSize(sf:: Vector2f(206, 52));
    SelectPlayLevels.setPosition(1070, 636);

    text1.setString("Play");
    text1.setPosition(1070, 636);

    text1.setCharacterSize(25);

    text2.setString("Play");
    text2.setPosition(1066, 636);

    text2.setCharacterSize(25);
    text2.setFont(* font);



    text3.setString("Easy");
    text3.setPosition(575, 176);

    text3.setCharacterSize(25);
    text3.setFont(* font);


    text4.setString("Easy");
    text4.setPosition(578, 176);


    textTitulo.setFont(* font);
    textTitulo.setString("Meddium");
    textTitulo.setPosition(557, 346);
    textTitulo.setCharacterSize(25);

    SubtextTitulo.setFont(* font);
    SubtextTitulo.setString("Meddium");
    SubtextTitulo.setPosition(561, 346);
    SubtextTitulo.setCharacterSize(25);

    text5.setFont(* font);
    text5.setString("Hard");
    text5.setPosition(568, 546);
    text5.setCharacterSize(25);



    text6.setFont(* font);
    text6.setString("Hard");
    text6.setPosition(571, 546);
    text6.setCharacterSize(25);




    if (KeyDown == true) {

        if (NumericKeyBoard < 4) {
            ++NumericKeyBoard;


            if (NumericKeyBoard == 1) {
                text2.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
            }
            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Magenta);
                text4.setFillColor(sf:: Color:: Cyan);
            }
            if (NumericKeyBoard == 3) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Magenta);
            }
            if (NumericKeyBoard == 4) {
                text6.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
            }

            KeyDown = false;
            SelecionadoEnter = false;
        }
    }


    if (KeyUP == true) {
        if (NumericKeyBoard > 1) {
            --NumericKeyBoard;

            if (NumericKeyBoard== 1) {
                text2.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Magenta);
            }

            if (NumericKeyBoard == 2) {
                text2.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Magenta);
                text4.setFillColor(sf:: Color:: Cyan);
            }
            if (NumericKeyBoard == 3) {
                text4.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text6.setFillColor(sf:: Color:: Magenta);
            }
            if (NumericKeyBoard == 4) {
                text6.setFillColor(sf:: Color:: Cyan);
                text4.setFillColor(sf:: Color:: Cyan);
                SubtextTitulo.setFillColor(sf:: Color:: Cyan);
                text2.setFillColor(sf:: Color:: Magenta);
            }

            KeyUP = false;
            SelecionadoEnter = false;
        }
    }
    if (SelecionadoEnter == true) {

        if (NumericKeyBoard == 1) {
        	Infinitygame = true;
            ChaveLevels = false;
            ChaveGame = true;
            MOdoGame = 1;
        }
        if (NumericKeyBoard == 2) {
        	Bomb = 50;
        	 MOdoGame = 2;
            ChaveLevels = false;
            ChaveGame = true;

        }
        if (NumericKeyBoard== 3) {
        	 MOdoGame = 3;
            ChaveLevels = false;
            ChaveGame = true;
            Bomb = 35;
        }
        if (NumericKeyBoard == 4) {
            ChaveLevels = false;
            ChaveGame = true;
            if(TesteBombs == false){
                      	Bomb = 50;
                      }
            MOdoGame = 2;
        }
        SelecionadoEnter = false;
    }




    if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {
        text2.setFillColor(sf:: Color:: Cyan);
        text4.setFillColor(sf:: Color:: Magenta);
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);
        text2.setFillColor(sf:: Color:: Cyan);
        text6.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 1;

    }
    else if (!SelctMouse.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text4.setFillColor(sf:: Color:: Cyan);

    }


    if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {
        text4.setFillColor(sf:: Color:: Cyan);
        SubtextTitulo.setFillColor(sf:: Color:: Magenta);
        text6.setFillColor(sf:: Color:: Cyan);
        text2.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 2;
    }
    else if (!SelctMouse2.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard== 0) {
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);

    }

    if (Mouse_Left == true) {
    	NumericKeyBoard = 0;
    	  if (SelctMouse.getGlobalBounds().contains(mouse_coord)) {


              ChaveLevels = false;
              ChaveGame = true;
              Mouse_Left = false;
              Infinitygame = true; //level easy
              MOdoGame = 1;
    	  }
        if (SelctMouse2.getGlobalBounds().contains(mouse_coord)) {


            ChaveLevels = false;
            ChaveGame = true;
            Mouse_Left = false;
            Bomb = 50;
            MOdoGame = 2;
        }
        if (SelectConfig.getGlobalBounds().contains(mouse_coord)) {
        	MOdoGame = 3;

            ChaveLevels = false;
            ChaveGame = true;
            Mouse_Left = false;
            Bomb = 35;
         }
        if (SelectPlayLevels.getGlobalBounds().contains(mouse_coord)) {

        	MOdoGame = 2;
               ChaveLevels = false;
               ChaveGame = true;
               Mouse_Left = false;
               if(TesteBombs == false){
                         	Bomb = 50;
                         }
           }
        Mouse_Left = false;
    }






    if (SelectConfig.getGlobalBounds().contains(mouse_coord)) {
        text4.setFillColor(sf:: Color:: Cyan);
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);
        text6.setFillColor(sf:: Color:: Magenta);
        text2.setFillColor(sf:: Color:: Cyan);
        NumericKeyBoard = 3;
    }
    else if (!SelectConfig.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text6.setFillColor(sf:: Color:: Cyan);


    }



    if (SelectPlayLevels.getGlobalBounds().contains(mouse_coord)) {
        text4.setFillColor(sf:: Color:: Cyan);
        SubtextTitulo.setFillColor(sf:: Color:: Cyan);
        text6.setFillColor(sf:: Color:: Cyan);
        text2.setFillColor(sf:: Color:: Magenta);
        NumericKeyBoard = 4;

    }
    else if (!SelectPlayLevels.getGlobalBounds().contains(mouse_coord) && NumericKeyBoard == 0) {
        text2.setFillColor(sf:: Color:: Cyan);


    }


}


void GeneralGame:: desenhar(){

	Window.clear();
    Window.draw(bg);
    Window.draw(text1);
    Window.draw(text2);
    Window.draw(text3);
    Window.draw(text4);
    Window.draw(text5);
    Window.draw(text6);
    Window.draw(text7);
    Window.draw(text8);
    Window.draw(text9);
    Window.draw(text10);
    Window.draw(textTitulo);
    Window.draw(SubtextTitulo);
    Window.draw(VolumeBg);
    Window.draw(Number1);
    Window.draw(Number2);
    Window.draw(Number3);
    Window.draw(Number4);
    Window.draw(NumberBombs);

    desenhaRetangulos();
    desenhaBarco();
    Window.draw(SpriteBarco01);
    Window.draw(SpriteBarco03);
    desenhaX();
    Window.draw(IconCaravela);
    Window.draw(IconVeleiro);
    Window.draw(Iconterco);
    Window.draw(Iconterco2);
    Window.draw(IconFluty);
    desenhaFire();
    Window.display();


}

void GeneralGame:: run_menu(){

    music -> play();
    while (Window.isOpen()) { // main loop


        loop_events();

        if (ChaveLobby == true) {
            Lobby();
        } else if (ChaveConfigs == true) {
            Configs();
        } else if (ChaveGame == true) {
            Game();
        } else if (ChaveLevels == true) {
            Levels();
        } else if(ChaveFinalGame == true){
        	FinalGame();
        }



        desenhar();
    }
    // end main loop
}
